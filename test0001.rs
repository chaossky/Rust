fn main(){
    let name="이소시개원헐당고";
    // .chars()는 문자열 (&str)에서 유니코드 단위로 순회할 수 있는 반복자를 반환하는
    // 메서드입니다.
    // 즉, 문자열을 문자 하나 하나 나눠서 처리를 할 수 있게 하는 기능을 해준다.
    // Ascii 뿐만 아니라 한글, 이모지 등 모든 유니코드 문자를 정확하게 처리해준다.
    // 참고로 name[0..1]은 Ascii에서는 통하지만, 유니코드를 쓸 경우 에러 panic을 가져온다.
    // .chars()는 Iterator<Item = char> 타입을 반환
    for c in name.chars(){
        println!("{}",c);
    }
}
/*
.next()란?
.next()는 반복자(iterator)에서 다음 값을 하나 꺼내는 메서드입니다.

호출할 때마다 반복자의 다음 항목을 반환합니다.

반환 타입은 Option<T>입니다:

Some(value) → 다음 값이 존재할 때
None → 더 이상 값이 없을 때 (반복이 끝났을 때)

루프에서는 for 문이 내부적으로 .next()를 자동으로 호출해요:

format!()란?
format!()은 다양한 값을 문자열로 포맷팅해서 하나의 String 객체로 반환하는 매크로입니다.

*/